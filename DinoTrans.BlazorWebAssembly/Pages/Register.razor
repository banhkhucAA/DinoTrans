@page "/register"
@inject IUserService AccountService
@inject IJSRuntime js

<h3>RegisterPage</h3>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <EditForm Model="User" OnValidSubmit="HandleRegistration" Enhance>
                <div class="card">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">Company Admin Information</div>
                                <div class="card-body">
                                    <div class="form-group mb-3">
                                        <input @bind="User.FirstName" class="form-control" placeholder="First Name" />
                                    </div>

                                    <div class="form-group mb-3">
                                        <input @bind="User.LastName" class="form-control" placeholder="Last Name" />
                                    </div>

                                    <div class="form-group mb-3">
                                        <input @bind="User.PhoneNumber" class="form-control" placeholder="Phone Number" />
                                    </div>

                                    <div class="form-group mb-3">
                                        <input @bind="User.Email" class="form-control" type="email" placeholder="Email Address" />
                                    </div>

                                    <div class="form-group mb-3">
                                        <input @bind="User.Address" class="form-control" type="text" placeholder="Your Address" />
                                    </div>

                                    <div class="form-group mb-3">
                                        <div>Default Role</div>
                                        <input @bind="@User.Role" class="form-control" type="text" readonly />
                                    </div>

                                    <div class="form-group">
                                        <div class="input-group mb-3">
                                            <input type="@(ShowPassword is true ? "text" : "password")" class="form-control" @bind="User.Password" placeholder="Password" aria-label="Password" aria-describedby="Password" />
                                            <span class="input-group-text cursorStyle" id="Password" @onclick="ShowPasswordEvent"> @(ShowPassword is true ? "Hide" : "Show") </span>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="input-group mb-3">
                                            <input type="@(ShowConfirmPassword is true ? "text" : "password")" class="form-control" @bind="User.ConfirmPassword" placeholder="Confirm Password" aria-label="Confirm Password" aria-describedby="Confirm-Password" />
                                            <span class="input-group-text cursorStyle" id="Confirm Password" @onclick="ShowConfirmPasswordEvent"> @(ShowConfirmPassword is true ? "Hide" : "Show") </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="card">
                                <div class="card-header">Company And Location Headquarter</div>
                                <div class="card-body">
                                    <div class="form-group mb-3">
                                        <input @bind="User.CompanyName" class="form-control" placeholder="Company Name" />
                                    </div>

                                    <div class="form-group mb-3">
                                        <input @bind="User.CompanyEmail" class="form-control" type="email" placeholder="Company Email" />
                                    </div>

                                    <div class="form-group mb-3">
                                        <input @bind="User.CompanyPhoneNumber" class="form-control" type="text" placeholder="Company Phone Number" />
                                    </div>

                                    <div class="form-group mb-3">
                                        <input @bind="User.CompanyAddress" class="form-control" type="text" placeholder="Company Address" />
                                    </div>

                                    <div class="form-group mb-3">
                                        <div>Choose your company role</div>
                                        <InputSelect @bind-Value="User.CompanyRole" class="form-control">
                                            <option value="@CompanyRoleEnum.Shipper">Công ty máy xây dựng</option>
                                            <option value="@CompanyRoleEnum.Carrier">Công ty vận chuyển</option>
                                        </InputSelect>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card-footer col-md-12 text-center">
                            <a class="text-primary cursorStyle text-center">Login Instead</a>
                            <button class="btn btn-primary" type="submit">Register</button>
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    public bool ShowPassword { get; set; }
    public bool ShowConfirmPassword { get; set; }

    void ShowPasswordEvent() => ShowPassword = !ShowPassword;
    void ShowConfirmPasswordEvent() => ShowConfirmPassword = !ShowConfirmPassword;

    public UserDTO User { get; set; } = new();

    protected override void OnInitialized()
    {
        User.Role = "CompanyAdministrator";
    }

    async Task HandleRegistration()
    {
        var (flag, message) = await AccountService.CreateAccount(User);

        if (flag)
        {
            await js.InvokeVoidAsync("alert", message);
            User = new();
            return;
        }
        else await js.InvokeVoidAsync("alert", message);
    }
}
