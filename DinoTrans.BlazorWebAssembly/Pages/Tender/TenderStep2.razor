@inject IConstructionMachineService ConstructionMachineService
@inject IJSRuntime js
<div class="card-body">
    <EditForm Model="InputStep2">
        <div class="column">
            @* Thời gian nhận hàng và thời gian giao hàng *@
            <div class="col-md-12 row">
                <div class="form-group col-md-6 column">
                    <header>Thời gian nhận hàng</header>
                    <div class="col-md-12">                
                        <label class="form-label">
                            Ngày nhận  hàng*
                        </label>
                        <input type="date" @bind="InputStep2.PickUpDate" class="form-control" @oninput="SearchOnInputChange" />
                        @* @if (ErrorStartDate != null)
                        {
                            <div style="color:red">@ErrorStartDate</div>
                        } *@
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">
                            Giờ nhận  hàng*
                        </label>
                        <input type="time" @bind="InputStep2.PickUpTime" class="form-control" @oninput="SearchOnInputChange" />
                        @* @if (ErrorStartDate != null)
                        {
                            <div style="color:red">@ErrorEndDate</div>
                        } *@
                    </div>
                </div>
                <div class="form-group col-md-6 column">
                    <header>Thời gian giao hàng</header>
                    <div class="col-md-12">
                        <label class="form-label">
                            Ngày giao hàng*
                        </label>
                        <input type="date" @bind="InputStep2.DeliveryDate" class="form-control" @oninput="SearchOnInputChange" />
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">
                            Giờ giao hàng *
                        </label>
                        <input type="time" @bind="InputStep2.DeliveryTime" class="form-control" @oninput="SearchOnInputChange" />
                    </div>
                </div>
            </div>
            @*  Máy cần vận chuyển *@
            <div class="col-md-12">
                <div class="row">
                    <header class="col-md-6">Thông tin máy xây dựng</header>
                    <NewConstructionMachineDialog IsDefaultEvent=IsDefaultEvent CallDefaultEvent=HandleDefaultEvent addedmachine="recallAPI" CompanyId="CompanyId"></NewConstructionMachineDialog>
                </div>                
            </div>
            <div>
                <input type="text" class="form-control" value="@searchText"
                       @onchange="@((ChangeEventArgs e) => ChangeText(e))"
                       placeholder="Search for construction machinery & equipment..." />
            </div>
            <ContructionMachineList contructionMachines="contructionMachines" ></ContructionMachineList>
            <div class="float-end">
                <Pagination ActivePageNumber="@currentPageNumber"
                            TotalPages="TotalPage"
                            DisplayPages="2"
                            FirstLinkIcon="IconName.ChevronDoubleLeft"
                            PreviousLinkIcon="IconName.ChevronLeft"
                            NextLinkIcon="IconName.ChevronRight"
                            LastLinkIcon="IconName.ChevronDoubleRight" 
                            PageChanged="OnPageChangedAsync" />
            </div>
            @*Địa chỉ và liên lạc nhận hàng và giao hàng*@
            <div class="col-md-12 row">
                <div class="form-group col-md-6 column">
                    <header>Thông tin nhận hàng</header>
                    <div class="col-md-12">
                        <label class="form-label">
                            Địa chỉ nhận hàng *
                        </label>
                        <input type="text" @bind="InputStep2.PickUpAddress" class="form-control" />
                        @* @if (ErrorStartDate != null)
                        {
                        <div style="color:red">@ErrorStartDate</div>
                        } *@
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">
                            Liên hệ nhận hàng *
                        </label>
                        <input type="text" @bind="InputStep2.ContactAtPickUpAddress" class="form-control" />
                        @* @if (ErrorStartDate != null)
                        {
                        <div style="color:red">@ErrorEndDate</div>
                        } *@
                    </div>
                </div>
                <div class="form-group col-md-6 column">
                    <header>Thông tin giao hàng</header>
                    <div class="col-md-12">
                        <label class="form-label">
                            Địa chỉ giao hàng *
                        </label>
                        <input type="text" @bind="InputStep2.DeliveryAddress" class="form-control" />
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">
                            Liên hệ giao hàng *
                        </label>
                        <input type="text" @bind="InputStep2.ContactAtDeliveryAddress" class="form-control" />
                    </div>
                </div>
            </div>

            @*Ghi chú và tài liệu*@
            <div class="col-md-12 row">
                    <header>Mô tả và tài liệu đính kèm</header>
                    <div class="col-md-6">
                        <label class="form-label">
                            Mô tả *
                        </label>
                        <input type="text" @bind="InputStep2.Notes" class="form-control" />
                        @* @if (ErrorStartDate != null)
                        {
                        <div style="color:red">@ErrorStartDate</div>
                        } *@
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">
                            Tài liệu đính kèm *
                        </label>
                        <input type="text" @bind="InputStep2.Documentations" class="form-control" />
                        @* @if (ErrorStartDate != null)
                        {
                        <div style="color:red">@ErrorEndDate</div>
                        } *@
                    </div>
             </div> 

        </div>

        <div class="form-group row float-end me-4">
            <button class="btn btn-primary mt-4" type="submit" @onclick="OnHandleSubmit">Bước tiếp theo</button>
        </div>
    </EditForm>
</div>
@code {
    [Parameter]
    public DinoTrans.Shared.Entities.Tender? NewTender { get; set; } = null;
    [Parameter]
    public int CompanyId { get; set; }
    public ConvertStep2 InputStep2 { get; set; } = new();
    public SearchLoadForTenderDTO searchLoadForTenderDTO = new();
    public List<ContructionMachine> contructionMachines = new();
    public int TotalPage { get; set; }
    public int currentPageNumber = 1;
    public string searchText { get; set; } = "";
    public bool IsDefaultEvent { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        var endDateString = NewTender.EndDate.ToString("yyyy-MM-dd");
        DateOnly enddateOnly = DateOnly.Parse(endDateString);
        InputStep2.PickUpDate = enddateOnly.AddDays(1);
        InputStep2.DeliveryDate = enddateOnly.AddDays(1);
        InputStep2.PickUpTime = new();
        InputStep2.DeliveryTime = InputStep2.PickUpTime.AddHours(1);
        InputStep2.PickUpAddress = "";
        InputStep2.DeliveryAddress = "";
        InputStep2.ContactAtPickUpAddress = "";
        InputStep2.ContactAtDeliveryAddress = "";
        InputStep2.Notes = "";
        InputStep2.Documentations = "";
        await SearchOnInputChange();

    }

    private void OnHandleSubmit()
    {

    }
    private async Task SearchOnInputChange()
    {
        if (InputStep2.PickUpDate != null && InputStep2.DeliveryDate != null && InputStep2.PickUpTime != null && InputStep2.DeliveryTime != null)
        {
            DateTime startDate = DateTime.Parse($"{InputStep2.PickUpDate} {InputStep2.PickUpTime}");
            DateTime endDate = DateTime.Parse($"{InputStep2.DeliveryDate} {InputStep2.DeliveryTime}");
            searchLoadForTenderDTO = new SearchLoadForTenderDTO
            {
                pageIndex = currentPageNumber,
                pageSize = 5,
                SearchText = searchText,
                TenderId = NewTender.Id,
                PickUpDate = startDate,
                DeliveryDate = endDate
            };
            var response = await ConstructionMachineService.SearchConstructionMachineForTender(searchLoadForTenderDTO);
            if(response.Success)
            {
                contructionMachines = response.Data.contructionMachines;
                TotalPage = response.Data.TotalPage;
            }
        }
    }

    private async Task OnPageChangedAsync(int newPageNumber)
    {
        await Task.Run(() => { currentPageNumber = newPageNumber; });
        await SearchOnInputChange();
    }

    private async Task recallAPI()
    {
        await SearchOnInputChange();
    }

    private async Task ChangeText(ChangeEventArgs e)
    {
        IsDefaultEvent = true;
        searchText = e?.Value.ToString();
        await SearchOnInputChange();
    }

    public void HandleDefaultEvent(bool newStatus)
    {
        IsDefaultEvent = newStatus;
    }
}
