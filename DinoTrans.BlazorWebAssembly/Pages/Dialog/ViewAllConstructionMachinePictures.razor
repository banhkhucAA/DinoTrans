@inject IJSRuntime js
@using Microsoft.AspNetCore.Hosting
<div class="col-md-6">
    <button style="max-width:100px; max-height:100px; background:url(@FirstPicture)" class="btn" @onclick="OpenDialog">
        <img />
    </button>
    <dialog style="position:fixed; top:50%; left:50%; transform: translate(-50%, -50%); min-width:500px; min-height:500px" id="dialog-ViewPictures">
        <div class="card">
            <div class="row">
                <div class="card-body p-4">
                    @if (AllPictures != null && AllPictures.Count != 0)
                    {
                        for (int i = 0; i < AllPictures.Count; i++)
                        {
                            <div class="form-group mt-3">
                                <img src="@AllPictures[i][$"Image_{i}"]" style="min-width:400px;min-height:400px" />
                            </div>
                        }
                    }
                    <div class="card-footer row">
                        <div class="form-group col-md-6">
                            <button class="btn btn-secondary ms-2" type="submit" @onclick="Close">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </dialog>
</div>

@code {
    [Parameter]
    public List<Dictionary<string, string>> AllPictures { get;set; }
    public string FirstPicture { get; set; }
    async Task OpenDialog()
    {
        await js.InvokeVoidAsync("ViewPictures");
    }
    protected override async Task OnInitializedAsync()
    {
        if (AllPictures != null && AllPictures.Count != 0)
        {
            for (int i = 0; i < AllPictures.Count; i++)
            {
                AllPictures[i][$"Image_{i}"] = AllPictures[i][$"Image_{i}"].Replace(@"\", @"/");
            }
            FirstPicture = AllPictures[0][$"Image_0"];
        }
    }

    async void Close()
    {
        await js.InvokeVoidAsync("closeModalViewPictures");
    }
}
