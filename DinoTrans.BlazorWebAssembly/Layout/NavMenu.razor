@inject AuthenticationStateProvider AuthenticationState
@inject IUserService userService
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">DinoTrans.BlazorWebAssembly</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>
                @if (companyRole == CompanyRoleEnum.Admin || companyRole == CompanyRoleEnum.Shipper)
        {
            <button @onclick="ChangeColor">
                <div class="nav-item px-3" style="color:@(IsChangeStep ? "red" : "yellow")">
                    DNN
                </div>
            </button>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private ResponseModel<CompanyRoleEnum> response = new();
    private CompanyRoleEnum companyRole = new();
    private bool IsChangeStep = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    protected override async Task OnInitializedAsync()
    {
        var customState = (CustomAuthenticationStateProvider)AuthenticationState;
        var authState = await customState.GetAuthenticationStateAsync();
        if (authState.User.Identity.IsAuthenticated)
        {
            var companyId = int.Parse(authState.User.FindFirstValue("CompanyId"));
            response = await userService.GetCompanyRole(companyId);
            if (response.Success) companyRole = response.Data;
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void ChangeColor()
    {
        IsChangeStep = true;
    }
}
